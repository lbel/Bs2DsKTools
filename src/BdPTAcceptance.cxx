/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

// ROOT and RooFit includes
#include "Riostream.h"
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <cmath> 
#include "TMath.h" 

#include "BdPTAcceptance.hxx"

//ClassImp(BdPTAcceptance) 


BdPTAcceptance::BdPTAcceptance(const char *name, const char *title, 
                               RooAbsReal& _t,
                               RooAbsReal& _beta, 
                               RooAbsReal& _slope,
                               RooAbsReal& _offset) :
  RooAbsReal(name,title), 
  t("t","t",this,_t),
  beta("beta","beta",this,_beta),
  slope("slope","slope",this,_slope),
  offset("offset","offset",this,_offset)
{ 
}

BdPTAcceptance::BdPTAcceptance(const BdPTAcceptance& other, const char* name) :  
  RooAbsReal(other,name), 
  t("t",this,other.t),
  beta("beta",this,other.beta),
  slope("slope",this,other.slope),
  offset("offset",this,other.offset)
{ 
}

Double_t BdPTAcceptance::evaluate() const 
{ 
  // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE
  if ( double(t) < double(offset) )
    return 0.;
  const double var = double(slope) * ( double(t) - double(offset) );
  if ( var < 10. ) {
    return ( 1. - std::exp( -var ) )*(1.-double(beta)*double(t));
  }
  else
    return 1.*(1.-double(beta)*double(t));
}
